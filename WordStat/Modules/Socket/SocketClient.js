//--------------------------------------------------------------------------------------------------

$.SocketClient = $.CT.extend(
    
/*--------------------------------------------------------------------------------------------------
|
| -> Конструктор
|
|-------------------------------------------------------------------------------------------------*/

    {private: {constructor: function(id, ws) {
        this.id = id;// ID соединения
        this.ws = ws;// Экземпляр соединения
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Возвращает UserID
|
|-------------------------------------------------------------------------------------------------*/

    {public: {getUserID: function() {
        return this.userid;
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Задает UserID
|
|-------------------------------------------------------------------------------------------------*/

    {public: {setUserID: function(userid) {
        this.userid = userid;
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Возвращает информацию о юзере
|
|-------------------------------------------------------------------------------------------------*/

    {public: {getData: function() {
        return this.data;
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Задает информацию о юзере
|
|-------------------------------------------------------------------------------------------------*/

    {public: {setData: function(data) {
        this.data = data;
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Отправляет сообщение об ошибке и закрывает соединение
|
|-------------------------------------------------------------------------------------------------*/

    {public: {error: function(error_msg) {
    // Отправляем сообщение
        this.send('Error', {'error_msg': error_msg});
        
    // Закрываем соединение
        this.close();
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Отправляет сообщение
|
|-------------------------------------------------------------------------------------------------*/

    {public: {send: function(header, body) {
    // Создаем запрос
        var r = [];
        
    // Заголовок
        r.push(header);
        
    // Тело запроса (по умолчанию пустой объект)
        r.push(typeof(body) == 'object' ? body : {});
        
    // Конвертируем в JSON
        var json = JSON.stringify(r);
        
    // Отправляем сообщение
        try {
            this.ws.send(json);
        } catch(e) {
        }
        
    // Записываем в консоль
        $.SocketConsole['<-'](header, ($.Socket.isConsole == 'body' ? JSON.stringify(r[1]) : json));
    }}},
    
/*--------------------------------------------------------------------------------------------------
|
| -> Закрывает соединение
|
|-------------------------------------------------------------------------------------------------*/

    {public: {close: function() {
    // Закрываем соединение
        try {
            this.ws.close();
        } catch(e) {
        }
    }}}
);

//--------------------------------------------------------------------------------------------------